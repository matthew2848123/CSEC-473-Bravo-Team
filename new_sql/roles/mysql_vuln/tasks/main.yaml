

- name: Copy Docker Compose
  become: yes
  copy:
    src: docker-compose.yaml
    dest: /root/docker-compose.yaml
    owner: root
    group: root
    mode: '0600'

- name: Set Docker Compose Creds
  become: yes
  lineinfile:
    dest: /root/docker-compose.yaml
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: 
'      - MYSQL_PASSWORD=.*', line:
'      - MYSQL_PASSWORD={{ MYSQL_PW | trim }}' 
      }
    - { regexp: 
'      - MYSQL_ROOT_PASSWORD=.*', line:
'      - MYSQL_ROOT_PASSWORD={{ MYSQL_ROOT_PW | trim }}' 
      }
    - { regexp: 
'      - MYSQL_DATABASE=.*', line:
'      - MYSQL_DATABASE={{ MYSQL_DB | trim }}' 
      }
    - { regexp: 
'      - MYSQL_USER=.*', line:
'      - MYSQL_USER={{ MYSQL_USER | trim }}' 
      }

- name: Clear DB (if it exists)
  become: yes
  file:
    path: /root/db
    state: "absent"

- name: Pull Docker Image Updates
  become: yes
  shell:
    chdir: /root
    cmd: docker compose pull

- name: Shut Down Docker Setup
  become: yes
  shell:
    chdir: /root
    cmd: docker compose down

- name: Start Up Docker Setup
  become: yes
  shell:
    chdir: /root
    cmd: docker compose up -d --build


#- name: Give captain_ghost Tons Of Perms
#  ansible.builtin.shell: >
#    "docker exec -it db mysql -u root --password='{{ MYSQL_ROOT_PW | trim }}' --database=classified -e 'GRANT ALL PRIVILEGES ON classified.* TO \'{{ MYSQL_USER | trim }}\'@\'%\';'"

- name: Create keys Table
  ansible.builtin.shell: >
    "docker exec -it db mysql -u {{ MYSQL_USER | trim }} --password='{{ MYSQL_PW | trim }}' --database=classified -e 'CREATE TABLE `keys` (
            id INT AUTO_INCREMENT PRIMARY KEY,
            sshkey TEXT NOT NULL
            );'"

- name: Insert Data into classified Table
  ansible.builtin.shell: >
    "docker exec -it db mysql -u {{ MYSQL_USER | trim }} --password='{{ MYSQL_PW | trim }}' --database=classified -e 'INSERT INTO \`keys\` (sshkey) VALUES ('{{ item }}');'"
  with_items: "{{ key_values }}"
